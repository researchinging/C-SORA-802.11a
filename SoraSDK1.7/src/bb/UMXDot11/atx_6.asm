; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.207 

include listing.inc

INCLUDELIB OLDNAMES

	ORG $+12
rgbLongPrePositive DB 00H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	01H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	01H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	01H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	01H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
gAGCLut	DD	0fffffff9H
	DD	0fffffffaH
	DD	0fffffffbH
	DD	0fffffffcH
	DD	0fffffffdH
	DD	0fffffffeH
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
PUBLIC	?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z ; Dot11aTxFrameEncode6
;	COMDAT pdata
; File c:\sorasdk1.7\inc\vector128.h
pdata	SEGMENT
$pdata$?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z DD imagerel $LN3305
	DD	imagerel $LN3305+11
	DD	imagerel $unwind$?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$15$?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z DD imagerel $LN3305+11
	DD	imagerel $LN3305+284
	DD	imagerel $chain$15$?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$16$?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z DD imagerel $LN3305+284
	DD	imagerel $LN3305+1475
	DD	imagerel $chain$16$?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$17$?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z DD imagerel $LN3305+1475
	DD	imagerel $LN3305+6743
	DD	imagerel $chain$17$?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$18$?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z DD imagerel $LN3305+6743
	DD	imagerel $LN3305+6919
	DD	imagerel $chain$18$?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$18$?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z DD 021H
	DD	imagerel $LN3305
	DD	imagerel $LN3305+11
	DD	imagerel $unwind$?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$17$?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z DD 021H
	DD	imagerel $LN3305+11
	DD	imagerel $LN3305+284
	DD	imagerel $chain$15$?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$16$?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z DD 020921H
	DD	025f809H
	DD	imagerel $LN3305+11
	DD	imagerel $LN3305+284
	DD	imagerel $chain$15$?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$15$?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z DD 020f121H
	DD	026e8f1H
	DD	027d8e8H
	DD	028c8dfH
	DD	029b8d6H
	DD	02aa8cdH
	DD	02b98c4H
	DD	02c88b6H
	DD	02d78adH
	DD	02e68a5H
	DD	05ef41fH
	DD	05fe41bH
	DD	060d417H
	DD	061c413H
	DD	067740fH
	DD	0666408H
	DD	0645404H
	DD	imagerel $LN3305
	DD	imagerel $LN3305+11
	DD	imagerel $unwind$?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z DD 030b01H
	DD	062010bH
	DD	03004H
; Function compile flags: /Ogtpy
; File c:\sorasdk1.7\src\bb\dot11a\dot11\atx_tpl_imp.h
xdata	ENDS
;	COMDAT ?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z
_TEXT	SEGMENT
rgbSignal$2734893 = 32
$T2736103 = 32
pcOutput$ = 40
rr1$2743821 = 48
rr1$2734791 = 48
rr1$2725200 = 48
SampleBufferSize$ = 64
temp$2742945 = 80
temp$2735950 = 80
info$ = 800
pPacket$ = 808
?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z PROC ; Dot11aTxFrameEncode6, COMDAT

; 6    : {

$LN3305:
	mov	rax, rsp
	push	rbx
	sub	rsp, 784				; 00000310H
	mov	QWORD PTR [rax+8], rbp
	mov	QWORD PTR [rax+24], rsi

; 7    :     unsigned int uiScrambledSize;
; 8    :     unsigned int uiSymbolCountData;
; 9    :     unsigned int uiPilotIndex = 0;
; 10   :     unsigned int i;
; 11   :     char * pbInput;
; 12   :     PTXSAMPLE pcOutput;
; 13   :     ULONG PacketSizePlusCRC32 = pPacket->PacketSize + 4;

	mov	esi, DWORD PTR [rdx+20]
	mov	QWORD PTR [rax+32], rdi
	mov	QWORD PTR [rax-16], r12
	mov	QWORD PTR [rax-24], r13
	mov	QWORD PTR [rax-32], r14
	mov	QWORD PTR [rax-40], r15
	mov	r12, rdx
	add	esi, 4
	xor	r15d, r15d

; 14   : 
; 15   :     // ClearWindow(info->cWindow);
; 16   : 
; 17   :     uiScrambledSize = SERVICE_LEN_IN_BITS + PADDING_LEN_IN_BITS
; 18   :         + (PacketSizePlusCRC32 << BITS_PER_BYTE_SHIFT);
; 19   :     uiSymbolCountData = (uiScrambledSize + (DBPS - 1)) / DBPS;

	mov	eax, -1431655765			; aaaaaaabH
	lea	ecx, DWORD PTR [rsi*8+45]
	mov	r13d, r15d
	mul	ecx
	mov	ebp, edx
	shr	ebp, 4

; 20   : 
; 21   :     ULONG SignalBytes = GetSignalBytes(info, uiSymbolCountData);

	lea	edx, DWORD PTR [rbp+rbp*4+25]
	shl	edx, 5
	cmp	DWORD PTR TxVector, 44			; 0000002cH
	jne	SHORT $LN9@Dot11aTxFr@2
	mov	eax, -858993459				; cccccccdH
	mul	edx
	shr	edx, 3
	imul	edx, 11
$LN9@Dot11aTxFr@2:
	lea	ebx, DWORD PTR [rdx+rdx+16]

; 22   :     
; 23   :     ULONG SampleBufferSize = 0;
; 24   :     SoraPacketGetTxSampleBuffer(pPacket, (PTXSAMPLE *)&pcOutput, &SampleBufferSize);

	lea	r8, QWORD PTR SampleBufferSize$[rsp]
	lea	rdx, QWORD PTR pcOutput$[rsp]
	mov	rcx, r12
	mov	DWORD PTR SampleBufferSize$[rsp], r15d
	call	SoraPacketGetTxSampleBuffer

; 25   :     ASSERT(SampleBufferSize >= SignalBytes);
; 26   : 
; 27   :     ALIGN_WITH_RCB_BUFFER_PADDING_ZERO(pcOutput, SignalBytes);

	test	bl, 127					; 0000007fH
	je	SHORT $LN5@Dot11aTxFr@2
	mov	rdx, QWORD PTR pcOutput$[rsp]
	mov	ecx, ebx
	and	ebx, -128				; ffffff80H
	sub	ebx, -128				; ffffffffffffff80H
	test	rdx, rdx
	je	SHORT $LN5@Dot11aTxFr@2
	mov	r8d, ebx
	sub	r8d, ecx
	add	rcx, rdx
	xor	edx, edx
	call	memset
$LN5@Dot11aTxFr@2:
	movaps	XMMWORD PTR [rsp+736], xmm6
	movaps	XMMWORD PTR [rsp+720], xmm7
	movaps	XMMWORD PTR [rsp+704], xmm8

; 28   :     SoraPacketSetSignalLength (pPacket, SignalBytes);	

	mov	edx, ebx
	mov	rcx, r12
	movaps	XMMWORD PTR [rsp+688], xmm9
	movaps	XMMWORD PTR [rsp+672], xmm10
	movaps	XMMWORD PTR [rsp+656], xmm11
	movaps	XMMWORD PTR [rsp+640], xmm12
	movaps	XMMWORD PTR [rsp+624], xmm13
	movaps	XMMWORD PTR [rsp+608], xmm14
	call	SoraPacketSetSignalLength

; 29   : 	
; 30   :     // Copy preamble
; 31   :     pcOutput += CopyPreamble16_NT(info, pcOutput, info->cWindow);

	mov	eax, DWORD PTR TxVector
	mov	r11, QWORD PTR pcOutput$[rsp]
	lea	r14, OFFSET FLAT:TxVector+1200
	cmp	eax, 44					; 0000002cH
	jne	$LN20@Dot11aTxFr@2
	movaps	XMMWORD PTR [rsp+592], xmm15
	lea	r9, OFFSET FLAT:PREAMBLE40_11A_LUT+32
	mov	ebx, 640				; 00000280H
	xorps	xmm15, xmm15
	lea	r10d, QWORD PTR [rax-40]
	npad	7
$LL19@Dot11aTxFr@2:
	movdqa	xmm7, XMMWORD PTR ?_ODD_MASK@@3QBU_COMPLEX16@@B
	movdqa	xmm8, XMMWORD PTR ?_EVEN_MASK@@3QBU_COMPLEX16@@B
	movdqa	xmm2, XMMWORD PTR [r9-32]
	lea	r8, QWORD PTR [r9-32]
	mov	edx, 5
	movdqa	xmm9, XMMWORD PTR ?g_coff1_row0@@3QAY07$$CBFA
	movdqa	xmm10, XMMWORD PTR ?g_coff1_row1@@3QAY07$$CBFA
	movdqa	xmm11, XMMWORD PTR ?g_coff1_row0@@3QAY07$$CBFA+16
	movdqa	xmm12, XMMWORD PTR ?g_coff1_row1@@3QAY07$$CBFA+16
	movdqa	xmm5, XMMWORD PTR [r9+16]
	movdqa	xmm13, XMMWORD PTR ?g_coff1_row0@@3QAY07$$CBFA+32
	movdqa	xmm14, XMMWORD PTR ?g_coff1_row1@@3QAY07$$CBFA+32
	movdqa	xmm4, xmm2
	pmulhrsw xmm2, xmm10
	pmulhrsw xmm4, xmm9
	movdqa	xmm1, xmm4
	palignr	xmm1, xmm15, 12
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	paddw	xmm2, xmm0
	pand	xmm1, xmm7
	pand	xmm2, xmm8
	por	xmm1, xmm2
	movdqa	xmm2, XMMWORD PTR [r9-16]
	movdqu	XMMWORD PTR TxVector+1200, xmm1
	movdqa	xmm3, xmm2
	pmulhrsw xmm2, xmm12
	pmulhrsw xmm3, xmm11
	movdqa	xmm1, xmm3
	palignr	xmm1, xmm4, 12
	movdqa	xmm4, XMMWORD PTR [r9]
	pshufd	xmm0, xmm1, 177				; 000000b1H
	movdqa	xmm6, xmm4
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	pmulhrsw xmm6, xmm13
	paddw	xmm2, xmm0
	pand	xmm1, xmm7
	pand	xmm2, xmm8
	por	xmm1, xmm2
	movdqa	xmm2, xmm6
	palignr	xmm2, xmm3, 12
	movdqu	XMMWORD PTR TxVector+1216, xmm1
	movdqa	xmm1, xmm4
	movdqa	xmm3, xmm5
	pmulhrsw xmm1, xmm14
	pshufd	xmm0, xmm2, 177				; 000000b1H
	palignr	xmm3, xmm4, 8
	movdqa	xmm4, xmm3
	paddw	xmm2, xmm0
	pshufd	xmm0, xmm1, 177				; 000000b1H
	pmulhrsw xmm3, xmm10
	paddw	xmm1, xmm0
	pand	xmm2, xmm7
	pmulhrsw xmm4, xmm9
	pand	xmm1, xmm8
	por	xmm2, xmm1
	movdqa	xmm1, xmm4
	palignr	xmm1, xmm6, 12
	movdqu	XMMWORD PTR TxVector+1232, xmm2
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm3, 177				; 000000b1H
	pand	xmm1, xmm7
	paddw	xmm3, xmm0
	pand	xmm3, xmm8
	por	xmm1, xmm3
	movdqa	xmm3, XMMWORD PTR [r9+32]
	movdqu	XMMWORD PTR TxVector+1244, xmm1
	movdqa	xmm2, xmm3
	palignr	xmm2, xmm5, 8
	movdqa	xmm5, xmm2
	pmulhrsw xmm2, xmm12
	pmulhrsw xmm5, xmm11
	movdqa	xmm1, xmm5
	palignr	xmm1, xmm4, 12
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	pand	xmm1, xmm7
	paddw	xmm2, xmm0
	lea	rax, QWORD PTR [r9+48]
	lea	rcx, OFFSET FLAT:TxVector+1276
	pand	xmm2, xmm8
	lea	edi, QWORD PTR [rdx+2]
	por	xmm1, xmm2
	movdqu	XMMWORD PTR TxVector+1260, xmm1
	movdqa	xmm1, XMMWORD PTR [rax]
	palignr	xmm1, xmm3, 8
	movdqa	xmm6, xmm1
	pmulhrsw xmm1, xmm14
	pmulhrsw xmm6, xmm13
	movdqa	xmm2, xmm6
	palignr	xmm2, xmm5, 12
	pshufd	xmm0, xmm2, 177				; 000000b1H
	paddw	xmm2, xmm0
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pand	xmm2, xmm7
	pand	xmm1, xmm8
	por	xmm2, xmm1
	npad	4
$LL25@Dot11aTxFr@2:
	movdqu	XMMWORD PTR [rcx], xmm2
	movdqa	xmm2, XMMWORD PTR [rax]
	lea	rax, QWORD PTR [rdx+1]
	add	rax, rax
	movdqa	xmm3, xmm2
	pmulhrsw xmm2, xmm10
	pmulhrsw xmm3, xmm9
	movdqa	xmm1, xmm3
	palignr	xmm1, xmm6, 12
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	paddw	xmm2, xmm0
	pand	xmm1, xmm7
	pand	xmm2, xmm8
	por	xmm1, xmm2
	movdqa	xmm2, XMMWORD PTR [r8+rax*8]
	lea	rax, QWORD PTR [rdx+2]
	movdqu	XMMWORD PTR [rcx+12], xmm1
	movdqa	xmm4, xmm2
	pmulhrsw xmm2, xmm12
	add	rax, rax
	pmulhrsw xmm4, xmm11
	movdqa	xmm1, xmm4
	palignr	xmm1, xmm3, 12
	movdqa	xmm3, XMMWORD PTR [r8+rax*8]
	lea	rax, QWORD PTR [rdx+3]
	pshufd	xmm0, xmm1, 177				; 000000b1H
	add	rax, rax
	movdqa	xmm5, xmm3
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	pmulhrsw xmm5, xmm13
	paddw	xmm2, xmm0
	pand	xmm1, xmm7
	pand	xmm2, xmm8
	por	xmm1, xmm2
	movdqa	xmm2, xmm5
	palignr	xmm2, xmm4, 12
	movdqa	xmm4, XMMWORD PTR [r8+rax*8]
	movdqu	XMMWORD PTR [rcx+28], xmm1
	movdqa	xmm1, xmm3
	pshufd	xmm0, xmm2, 177				; 000000b1H
	pmulhrsw xmm1, xmm14
	lea	rax, QWORD PTR [rdx+4]
	add	rax, rax
	add	rdx, 5
	paddw	xmm2, xmm0
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pand	xmm2, xmm7
	pand	xmm1, xmm8
	por	xmm2, xmm1
	movdqu	XMMWORD PTR [rcx+44], xmm2
	movdqa	xmm2, xmm4
	palignr	xmm2, xmm3, 8
	movdqa	xmm3, XMMWORD PTR [r8+rax*8]
	movdqa	xmm6, xmm2
	pmulhrsw xmm2, xmm10
	pmulhrsw xmm6, xmm9
	movdqa	xmm1, xmm6
	palignr	xmm1, xmm5, 12
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	paddw	xmm2, xmm0
	pand	xmm1, xmm7
	pand	xmm2, xmm8
	por	xmm1, xmm2
	movdqa	xmm2, xmm3
	palignr	xmm2, xmm4, 8
	movdqu	XMMWORD PTR [rcx+56], xmm1
	movdqa	xmm4, xmm2
	pmulhrsw xmm2, xmm12
	pmulhrsw xmm4, xmm11
	movdqa	xmm1, xmm4
	palignr	xmm1, xmm6, 12
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	pand	xmm1, xmm7
	paddw	xmm2, xmm0
	mov	rax, rdx
	add	rcx, 88					; 00000058H
	pand	xmm2, xmm8
	shl	rax, 4
	por	xmm1, xmm2
	add	rax, r8
	sub	rdi, 1
	movdqu	XMMWORD PTR [rcx-16], xmm1
	movdqa	xmm1, XMMWORD PTR [rax]
	palignr	xmm1, xmm3, 8
	movdqa	xmm6, xmm1
	pmulhrsw xmm1, xmm14
	pmulhrsw xmm6, xmm13
	movdqa	xmm2, xmm6
	palignr	xmm2, xmm4, 12
	pshufd	xmm0, xmm2, 177				; 000000b1H
	paddw	xmm2, xmm0
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pand	xmm2, xmm7
	pand	xmm1, xmm8
	por	xmm2, xmm1
	jne	$LL25@Dot11aTxFr@2
	movdqa	XMMWORD PTR rr1$2725200[rsp], xmm2
	mov	eax, DWORD PTR rr1$2725200[rsp]
	lea	edx, QWORD PTR [rdi+22]
	mov	DWORD PTR [rcx], eax
	mov	eax, DWORD PTR rr1$2725200[rsp+4]
	mov	DWORD PTR [rcx+4], eax
	mov	eax, DWORD PTR rr1$2725200[rsp+8]
	mov	DWORD PTR [rcx+8], eax
	mov	rax, r14
	mov	rcx, r11
	npad	4
$LL862@Dot11aTxFr@2:
	movdqa	xmm1, XMMWORD PTR [rax]
	movdqa	xmm0, XMMWORD PTR [rax+16]
	add	rcx, 16
	add	rax, 32					; 00000020H
	sub	rdx, 1
	psraw	xmm1, 6
	psraw	xmm0, 6
	packsswb xmm1, xmm0
	movntdq	XMMWORD PTR [rcx-16], xmm1
	jne	SHORT $LL862@Dot11aTxFr@2
	add	r11, 352				; 00000160H
	add	r9, rbx
	sub	r10, 1
	jne	$LL19@Dot11aTxFr@2
	mov	r11, QWORD PTR pcOutput$[rsp]
	movaps	xmm15, XMMWORD PTR [rsp+592]
	mov	ebx, 704				; 000002c0H
	jmp	SHORT $LN14@Dot11aTxFr@2
$LN20@Dot11aTxFr@2:
	cmp	eax, 40					; 00000028H
	jne	SHORT $LN15@Dot11aTxFr@2
	lea	rax, OFFSET FLAT:PREAMBLE40_11A_LUT
	mov	ecx, 80					; 00000050H
	npad	12
$LL907@Dot11aTxFr@2:
	movdqa	xmm1, XMMWORD PTR [rax]
	movdqa	xmm0, XMMWORD PTR [rax+16]
	add	r11, 16
	add	rax, 32					; 00000020H
	sub	rcx, 1
	psraw	xmm1, 6
	psraw	xmm0, 6
	packsswb xmm1, xmm0
	movntdq	XMMWORD PTR [r11-16], xmm1
	jne	SHORT $LL907@Dot11aTxFr@2
	mov	r11, QWORD PTR pcOutput$[rsp]
	mov	ebx, 640				; 00000280H
	jmp	SHORT $LN14@Dot11aTxFr@2
$LN15@Dot11aTxFr@2:
	mov	ebx, r15d
$LN14@Dot11aTxFr@2:
	mov	eax, 2513				; 000009d1H

; 32   : 
; 33   :     ConvEncodeReset(info->bConvEncoderReg);
; 34   :     // Generate Signal
; 35   :     pcOutput += GenerateSignal(info, pcOutput, info->cWindow, SIGNAL_RATE,
; 36   :             (unsigned short)PacketSizePlusCRC32);

	movzx	edx, si
	xor	r8b, r8b
	mov	WORD PTR TxVector+6912, ax
	mov	eax, 1051				; 0000041bH
	shl	edx, 5
	mov	WORD PTR TxVector+6916, ax
	mov	eax, -643				; fffffffffffffd7dH
	or	edx, 11
	mov	WORD PTR TxVector+6918, ax
	mov	eax, -28
	mov	ecx, edx
	mov	WORD PTR TxVector+6920, ax
	shr	ecx, 16
	mov	eax, -645				; fffffffffffffd7bH
	mov	WORD PTR TxVector+6922, ax
	xor	ecx, edx
	mov	eax, ebx
	lea	rbx, QWORD PTR [r11+rax*2]
	mov	eax, ecx
	mov	WORD PTR TxVector+6914, r15w
	shr	eax, 8
	mov	WORD PTR TxVector+6924, r15w
	mov	WORD PTR TxVector+6926, r15w
	xor	ecx, eax
	mov	QWORD PTR pcOutput$[rsp], rbx
	lea	r9, OFFSET FLAT:TxVector+25
	mov	eax, ecx
	lea	r10, QWORD PTR rgbSignal$2734893[rsp]
	mov	r11d, 3
	shr	eax, 4
	lea	r14, OFFSET FLAT:__ImageBase
	xor	ecx, eax
	mov	eax, ecx
	shr	eax, 2
	xor	ecx, eax
	lea	eax, DWORD PTR [rcx+rcx]
	xor	eax, ecx
	and	eax, 2
	shl	eax, 16
	or	eax, edx
	mov	DWORD PTR rgbSignal$2734893[rsp], eax
	npad	5
$LL960@Dot11aTxFr@2:
	movzx	edx, BYTE PTR [r10]
	movzx	eax, r8b
	add	r9, 2
	shl	eax, 8
	movzx	r8d, dl
	inc	r10
	movsxd	rcx, eax
	shr	r8b, 2
	or	rcx, rdx
	sub	r11, 1
	movzx	eax, WORD PTR CONV_ENCODER_1_2_LUT[r14+rcx*2]
	mov	WORD PTR [r9-2], ax
	mov	BYTE PTR TxVector+24, r8b
	jne	SHORT $LL960@Dot11aTxFr@2
	movzx	eax, BYTE PTR TxVector+25
	mov	edx, 256				; 00000100H
	lea	r11, OFFSET FLAT:TxVector+26
	lea	ecx, DWORD PTR [rax+rax*2]
	lea	eax, DWORD PTR [rcx+rcx]
	cdqe
	movzx	r8d, WORD PTR INTERLEAVE_6M_LUT[r14+rax*2]
	movzx	r9d, WORD PTR INTERLEAVE_6M_LUT[r14+rax*2+2]
	movzx	r10d, WORD PTR INTERLEAVE_6M_LUT[r14+rax*2+4]
	mov	WORD PTR TxVector+61, r8w
	mov	WORD PTR TxVector+63, r9w
	mov	WORD PTR TxVector+65, r10w
	npad	7
$LL965@Dot11aTxFr@2:
	movzx	eax, BYTE PTR [r11]
	inc	r11
	add	eax, edx
	add	edx, 256				; 00000100H
	lea	eax, DWORD PTR [rax+rax*2]
	add	eax, eax
	or	r8w, WORD PTR INTERLEAVE_6M_LUT[r14+rax*2]
	or	r9w, WORD PTR INTERLEAVE_6M_LUT[r14+rax*2+2]
	or	r10w, WORD PTR INTERLEAVE_6M_LUT[r14+rax*2+4]
	mov	WORD PTR TxVector+61, r8w
	mov	WORD PTR TxVector+63, r9w
	mov	WORD PTR TxVector+65, r10w
	cmp	edx, 1536				; 00000600H
	jb	SHORT $LL965@Dot11aTxFr@2
	lea	r10, OFFSET FLAT:TxVector+112
	lea	r8, OFFSET FLAT:TxVector+61
	mov	r9d, 6
	mov	rdx, r10
	npad	10
$LL970@Dot11aTxFr@2:
	movzx	eax, BYTE PTR [r8]
	add	rdx, 32					; 00000020H
	inc	r8
	shl	eax, 3
	sub	r9, 1
	movsxd	rcx, eax
	mov	rax, QWORD PTR MAPA_BPSK_LUT[r14+rcx*4]
	mov	QWORD PTR [rdx-32], rax
	mov	rax, QWORD PTR MAPA_BPSK_LUT[r14+rcx*4+8]
	mov	QWORD PTR [rdx-24], rax
	mov	rax, QWORD PTR MAPA_BPSK_LUT[r14+rcx*4+16]
	mov	QWORD PTR [rdx-16], rax
	mov	rax, QWORD PTR MAPA_BPSK_LUT[r14+rcx*4+24]
	mov	QWORD PTR [rdx-8], rax
	jne	SHORT $LL970@Dot11aTxFr@2
	mov	rcx, r10
	mov	edx, 38					; 00000026H
	lea	r8, OFFSET FLAT:TxVector+456
$LL984@Dot11aTxFr@2:
	cmp	edx, 57					; 00000039H
	je	SHORT $LN983@Dot11aTxFr@2
	cmp	edx, 43					; 0000002bH
	je	SHORT $LN983@Dot11aTxFr@2
	mov	eax, DWORD PTR [rcx]
	add	rcx, 4
	mov	DWORD PTR [r8], eax
$LN983@Dot11aTxFr@2:
	inc	edx
	add	r8, 4
	cmp	edx, 64					; 00000040H
	jb	SHORT $LL984@Dot11aTxFr@2
	mov	edx, 1
	lea	r8, OFFSET FLAT:TxVector+308
$LL979@Dot11aTxFr@2:
	cmp	edx, 7
	je	SHORT $LN978@Dot11aTxFr@2
	cmp	edx, 21
	je	SHORT $LN978@Dot11aTxFr@2
	mov	eax, DWORD PTR [rcx]
	add	rcx, 4
	mov	DWORD PTR [r8], eax
$LN978@Dot11aTxFr@2:
	inc	edx
	add	r8, 4
	cmp	edx, 26
	jbe	SHORT $LL979@Dot11aTxFr@2
	mov	eax, 10720				; 000029e0H
	mov	ecx, -10720				; ffffffffffffd620H
	xor	edx, edx
	mov	WORD PTR TxVector+388, cx
	lea	rcx, QWORD PTR temp$2735950[rsp]
	mov	r8d, 512				; 00000200H
	mov	WORD PTR TxVector+332, ax
	mov	WORD PTR TxVector+334, r15w
	mov	WORD PTR TxVector+390, r15w
	mov	WORD PTR TxVector+532, ax
	mov	WORD PTR TxVector+534, r15w
	mov	WORD PTR TxVector+476, ax
	mov	WORD PTR TxVector+478, r15w
	call	memset
	lea	rcx, QWORD PTR temp$2735950[rsp]
	lea	rdx, OFFSET FLAT:TxVector+304
	mov	r8d, 128				; 00000080H
	call	memcpy
	lea	rcx, QWORD PTR temp$2735950[rsp+384]
	lea	rdx, OFFSET FLAT:TxVector+432
	mov	r8d, 128				; 00000080H
	call	memcpy
	lea	rcx, QWORD PTR temp$2735950[rsp]
	call	??$IFFTSSEEx@$0IA@@@YAXPEAUvcs@@@Z	; IFFTSSEEx<128>
	lea	r11, OFFSET FLAT:TxVector+688
	lea	rdx, OFFSET FLAT:?FFT128LUTMap@@3QBFB	; FFT128LUTMap
	mov	r8, r11
	lea	r9, OFFSET FLAT:?FFT128LUTMap@@3QBFB+256
	npad	7
$LL994@Dot11aTxFr@2:
	movsx	rax, WORD PTR [rdx]
	add	rdx, 2
	add	r8, 4
	cmp	rdx, r9
	mov	ecx, DWORD PTR temp$2735950[rsp+rax*4]
	mov	DWORD PTR [r8-4], ecx
	jl	SHORT $LL994@Dot11aTxFr@2
	mov	rax, r11
	mov	ecx, 32					; 00000020H
$LL991@Dot11aTxFr@2:
	movdqa	xmm0, XMMWORD PTR [rax]
	add	rax, 16
	sub	rcx, 1
	psllw	xmm0, 2
	movdqa	XMMWORD PTR [rax-16], xmm0
	jne	SHORT $LL991@Dot11aTxFr@2
	lea	rdi, OFFSET FLAT:TxVector+560
	lea	rdx, OFFSET FLAT:TxVector+1072
	mov	r8d, 128				; 00000080H
	mov	rcx, rdi
	call	memcpy
	movzx	ecx, WORD PTR TxVector+568
	sar	WORD PTR TxVector+562, 2
	sar	WORD PTR TxVector+564, 1
	sar	WORD PTR TxVector+566, 1
	movzx	r11d, WORD PTR TxVector+1072
	movzx	eax, cx
	sar	r11w, 2
	sar	ax, 2
	mov	WORD PTR TxVector+560, r11w
	sub	cx, ax
	mov	WORD PTR TxVector+568, cx
	movzx	ecx, WORD PTR TxVector+570
	movzx	eax, cx
	sar	ax, 2
	sub	cx, ax
	movzx	eax, WORD PTR TxVector+6912
	mov	WORD PTR TxVector+570, cx
	movzx	ecx, WORD PTR TxVector+688
	movdqa	xmm0, XMMWORD PTR TxVector+560
	paddsw	xmm0, XMMWORD PTR TxVector+6912
	mov	WORD PTR TxVector+6924, r15w
	mov	WORD PTR TxVector+6926, r15w
	movdqa	XMMWORD PTR TxVector+560, xmm0
	add	WORD PTR TxVector+560, ax
	movzx	eax, WORD PTR TxVector+6914
	add	WORD PTR TxVector+562, ax
	movzx	eax, cx
	sar	ax, 2
	sub	cx, ax
	mov	WORD PTR TxVector+6912, cx
	movzx	ecx, WORD PTR TxVector+690
	movzx	eax, cx
	sar	ax, 2
	sub	cx, ax
	movzx	eax, WORD PTR TxVector+692
	sar	ax, 1
	mov	WORD PTR TxVector+6914, cx
	mov	WORD PTR TxVector+6916, ax
	movzx	eax, WORD PTR TxVector+694
	sar	ax, 1
	mov	WORD PTR TxVector+6918, ax
	movzx	eax, WORD PTR TxVector+696
	sar	ax, 2
	mov	WORD PTR TxVector+6920, ax
	movzx	eax, WORD PTR TxVector+698
	sar	ax, 2
	mov	WORD PTR TxVector+6922, ax
	mov	eax, DWORD PTR TxVector
	cmp	eax, 44					; 0000002cH
	jne	$LN1033@Dot11aTxFr@2
	movdqa	xmm7, XMMWORD PTR ?_ODD_MASK@@3QBU_COMPLEX16@@B
	movdqa	xmm8, XMMWORD PTR ?_EVEN_MASK@@3QBU_COMPLEX16@@B
	movdqa	xmm2, XMMWORD PTR TxVector+560
	xorps	xmm0, xmm0
	lea	edx, QWORD PTR [rax-39]
	movdqa	xmm9, XMMWORD PTR ?g_coff1_row0@@3QAY07$$CBFA
	movdqa	xmm10, XMMWORD PTR ?g_coff1_row1@@3QAY07$$CBFA
	movdqa	xmm11, XMMWORD PTR ?g_coff1_row0@@3QAY07$$CBFA+16
	movdqa	xmm12, XMMWORD PTR ?g_coff1_row1@@3QAY07$$CBFA+16
	movdqa	xmm13, XMMWORD PTR ?g_coff1_row0@@3QAY07$$CBFA+32
	movdqa	xmm14, XMMWORD PTR ?g_coff1_row1@@3QAY07$$CBFA+32
	movdqa	xmm3, xmm2
	pmulhrsw xmm2, xmm10
	pmulhrsw xmm3, xmm9
	movdqa	xmm1, xmm3
	palignr	xmm1, xmm0, 12
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	paddw	xmm2, xmm0
	pand	xmm1, xmm7
	pand	xmm2, xmm8
	por	xmm1, xmm2
	movdqa	xmm2, XMMWORD PTR TxVector+576
	movdqu	XMMWORD PTR TxVector+1200, xmm1
	movdqa	xmm4, xmm2
	pmulhrsw xmm2, xmm12
	pmulhrsw xmm4, xmm11
	movdqa	xmm1, xmm4
	palignr	xmm1, xmm3, 12
	movdqa	xmm3, XMMWORD PTR TxVector+592
	pshufd	xmm0, xmm1, 177				; 000000b1H
	movdqa	xmm5, xmm3
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	pmulhrsw xmm5, xmm13
	paddw	xmm2, xmm0
	pand	xmm1, xmm7
	pand	xmm2, xmm8
	por	xmm1, xmm2
	movdqa	xmm2, xmm5
	palignr	xmm2, xmm4, 12
	movdqa	xmm4, XMMWORD PTR TxVector+608
	movdqu	XMMWORD PTR TxVector+1216, xmm1
	movdqa	xmm1, xmm3
	pshufd	xmm0, xmm2, 177				; 000000b1H
	pmulhrsw xmm1, xmm14
	paddw	xmm2, xmm0
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pand	xmm2, xmm7
	pand	xmm1, xmm8
	por	xmm2, xmm1
	movdqu	XMMWORD PTR TxVector+1232, xmm2
	movdqa	xmm2, xmm4
	palignr	xmm2, xmm3, 8
	movdqa	xmm3, XMMWORD PTR TxVector+624
	movdqa	xmm6, xmm2
	pmulhrsw xmm2, xmm10
	pmulhrsw xmm6, xmm9
	movdqa	xmm1, xmm6
	palignr	xmm1, xmm5, 12
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	paddw	xmm2, xmm0
	pand	xmm1, xmm7
	pand	xmm2, xmm8
	por	xmm1, xmm2
	movdqa	xmm2, xmm3
	palignr	xmm2, xmm4, 8
	movdqu	XMMWORD PTR TxVector+1244, xmm1
	movdqa	xmm4, xmm2
	pmulhrsw xmm2, xmm12
	pmulhrsw xmm4, xmm11
	movdqa	xmm1, xmm4
	palignr	xmm1, xmm6, 12
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	pand	xmm1, xmm7
	paddw	xmm2, xmm0
	lea	rcx, OFFSET FLAT:TxVector+1276
	lea	rax, OFFSET FLAT:TxVector+640
	pand	xmm2, xmm8
	lea	r8d, QWORD PTR [rdx+2]
	por	xmm1, xmm2
	movdqa	xmm2, XMMWORD PTR TxVector+640
	palignr	xmm2, xmm3, 8
	movdqu	XMMWORD PTR TxVector+1260, xmm1
	movdqa	xmm5, xmm2
	pmulhrsw xmm2, xmm14
	pmulhrsw xmm5, xmm13
	movdqa	xmm3, xmm5
	palignr	xmm3, xmm4, 12
	pshufd	xmm0, xmm3, 177				; 000000b1H
	paddw	xmm3, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	paddw	xmm2, xmm0
	pand	xmm3, xmm7
	pand	xmm2, xmm8
	por	xmm3, xmm2
	npad	12
$LL1038@Dot11aTxFr@2:
	movdqu	XMMWORD PTR [rcx], xmm3
	movdqa	xmm2, XMMWORD PTR [rax]
	lea	rax, QWORD PTR [rdx+1]
	add	rax, rax
	movdqa	xmm3, xmm2
	pmulhrsw xmm2, xmm10
	pmulhrsw xmm3, xmm9
	movdqa	xmm1, xmm3
	palignr	xmm1, xmm5, 12
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	paddw	xmm2, xmm0
	pand	xmm1, xmm7
	pand	xmm2, xmm8
	por	xmm1, xmm2
	movdqu	XMMWORD PTR [rcx+12], xmm1
	movdqa	xmm2, XMMWORD PTR [rdi+rax*8]
	lea	rax, QWORD PTR [rdx+2]
	add	rax, rax
	movdqa	xmm4, xmm2
	pmulhrsw xmm2, xmm12
	pmulhrsw xmm4, xmm11
	movdqa	xmm1, xmm4
	palignr	xmm1, xmm3, 12
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	paddw	xmm2, xmm0
	pand	xmm1, xmm7
	pand	xmm2, xmm8
	por	xmm1, xmm2
	movdqu	XMMWORD PTR [rcx+28], xmm1
	movdqa	xmm3, XMMWORD PTR [rdi+rax*8]
	lea	rax, QWORD PTR [rdx+3]
	add	rax, rax
	movdqa	xmm5, xmm3
	movdqa	xmm1, xmm3
	pmulhrsw xmm1, xmm14
	pmulhrsw xmm5, xmm13
	movdqa	xmm2, xmm5
	palignr	xmm2, xmm4, 12
	pshufd	xmm0, xmm2, 177				; 000000b1H
	paddw	xmm2, xmm0
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pand	xmm2, xmm7
	pand	xmm1, xmm8
	por	xmm2, xmm1
	movdqu	XMMWORD PTR [rcx+44], xmm2
	movdqa	xmm4, XMMWORD PTR [rdi+rax*8]
	lea	rax, QWORD PTR [rdx+4]
	add	rax, rax
	add	rdx, 5
	movdqa	xmm2, xmm4
	palignr	xmm2, xmm3, 8
	movdqa	xmm6, xmm2
	pmulhrsw xmm2, xmm10
	pmulhrsw xmm6, xmm9
	movdqa	xmm1, xmm6
	palignr	xmm1, xmm5, 12
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	paddw	xmm2, xmm0
	pand	xmm1, xmm7
	pand	xmm2, xmm8
	por	xmm1, xmm2
	movdqu	XMMWORD PTR [rcx+56], xmm1
	movdqa	xmm3, XMMWORD PTR [rdi+rax*8]
	movdqa	xmm2, xmm3
	palignr	xmm2, xmm4, 8
	movdqa	xmm4, xmm2
	pmulhrsw xmm2, xmm12
	pmulhrsw xmm4, xmm11
	movdqa	xmm1, xmm4
	palignr	xmm1, xmm6, 12
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	pand	xmm1, xmm7
	paddw	xmm2, xmm0
	mov	rax, rdx
	add	rcx, 88					; 00000058H
	add	rax, rax
	sub	r8, 1
	pand	xmm2, xmm8
	por	xmm1, xmm2
	lea	rax, QWORD PTR TxVector[r14+rax*8+560]
	movdqu	XMMWORD PTR [rcx-16], xmm1
	movdqa	xmm1, XMMWORD PTR [rax]
	palignr	xmm1, xmm3, 8
	movdqa	xmm5, xmm1
	pmulhrsw xmm1, xmm14
	pmulhrsw xmm5, xmm13
	movdqa	xmm3, xmm5
	palignr	xmm3, xmm4, 12
	pshufd	xmm0, xmm3, 177				; 000000b1H
	paddw	xmm3, xmm0
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pand	xmm3, xmm7
	pand	xmm1, xmm8
	por	xmm3, xmm1
	jne	$LL1038@Dot11aTxFr@2
	movdqa	XMMWORD PTR rr1$2734791[rsp], xmm3
	mov	eax, DWORD PTR rr1$2734791[rsp]
	mov	DWORD PTR [rcx], eax
	mov	eax, DWORD PTR rr1$2734791[rsp+4]
	mov	DWORD PTR [rcx+4], eax
	mov	eax, DWORD PTR rr1$2734791[rsp+8]
	mov	DWORD PTR [rcx+8], eax
	lea	rax, OFFSET FLAT:TxVector+1200
	lea	ecx, QWORD PTR [r8+22]
	npad	2
$LL1875@Dot11aTxFr@2:
	movdqa	xmm1, XMMWORD PTR [rax]
	movdqa	xmm0, XMMWORD PTR [rax+16]
	add	rbx, 16
	add	rax, 32					; 00000020H
	sub	rcx, 1
	psraw	xmm1, 6
	psraw	xmm0, 6
	packsswb xmm1, xmm0
	movntdq	XMMWORD PTR [rbx-16], xmm1
	jne	SHORT $LL1875@Dot11aTxFr@2
	mov	eax, 176				; 000000b0H
	jmp	SHORT $LN1027@Dot11aTxFr@2
$LN1033@Dot11aTxFr@2:
	cmp	eax, 40					; 00000028H
	jne	SHORT $LN1028@Dot11aTxFr@2
	mov	rax, rdi
	mov	ecx, 20
	npad	2
$LL1920@Dot11aTxFr@2:
	movdqa	xmm1, XMMWORD PTR [rax]
	movdqa	xmm0, XMMWORD PTR [rax+16]
	add	rbx, 16
	add	rax, 32					; 00000020H
	sub	rcx, 1
	psraw	xmm1, 6
	psraw	xmm0, 6
	packsswb xmm1, xmm0
	movntdq	XMMWORD PTR [rbx-16], xmm1
	jne	SHORT $LL1920@Dot11aTxFr@2
	mov	eax, 160				; 000000a0H
	jmp	SHORT $LN1027@Dot11aTxFr@2
$LN1028@Dot11aTxFr@2:
	mov	eax, r15d
$LN1027@Dot11aTxFr@2:

; 37   :     
; 38   :     // Scramble Data
; 39   :     Scramble11a(pPacket->pMdl, info->bFrameScrambled,
; 40   :             uiSymbolCountData * (DBPS / BITS_PER_BYTE), pPacket->Reserved1, info->ulRadom);

	mov	r10, QWORD PTR [r12]
	mov	esi, DWORD PTR [r12+24]
	mov	ecx, eax
	mov	rax, QWORD PTR pcOutput$[rsp]
	lea	r11d, DWORD PTR [rbp+rbp*2]
	lea	rdi, OFFSET FLAT:TxVector+1908
	lea	rbx, QWORD PTR [rax+rcx*2]
	mov	r8b, 79					; 0000004fH
	add	r11, rdi
	mov	DWORD PTR $T2736103[rsp], esi
	lea	rdx, OFFSET FLAT:TxVector+1910
	mov	BYTE PTR TxVector+1908, 112		; 00000070H
	mov	QWORD PTR pcOutput$[rsp], rbx
	mov	BYTE PTR TxVector+1909, r8b
	test	r10, r10
	je	SHORT $LN1968@Dot11aTxFr@2
	npad	3
$LL1969@Dot11aTxFr@2:
	mov	ecx, DWORD PTR [r10+44]
	mov	eax, DWORD PTR [r10+40]
	add	rcx, QWORD PTR [r10+32]
	test	eax, eax
	je	SHORT $LN1965@Dot11aTxFr@2
	mov	r9, rax
$LL1967@Dot11aTxFr@2:
	movzx	eax, r8b
	inc	rdx
	inc	rcx
	shr	rax, 1
	movzx	r8d, BYTE PTR SCRAMBLE_11A_LUT[rax+r14]
	movzx	eax, r8b
	xor	al, BYTE PTR [rcx-1]
	sub	r9, 1
	mov	BYTE PTR [rdx-1], al
	jne	SHORT $LL1967@Dot11aTxFr@2
$LN1965@Dot11aTxFr@2:
	mov	r10, QWORD PTR [r10]
	test	r10, r10
	jne	SHORT $LL1969@Dot11aTxFr@2
$LN1968@Dot11aTxFr@2:
	movzx	eax, r8b
	add	rdx, 5
	shr	rax, 1
	movzx	ecx, BYTE PTR SCRAMBLE_11A_LUT[rax+r14]
	movzx	eax, cl
	xor	al, sil
	mov	BYTE PTR [rdx-5], al
	mov	rax, rcx
	shr	rax, 1
	movzx	ecx, BYTE PTR SCRAMBLE_11A_LUT[rax+r14]
	movzx	eax, cl
	xor	al, BYTE PTR $T2736103[rsp+1]
	mov	BYTE PTR [rdx-4], al
	mov	rax, rcx
	shr	rax, 1
	movzx	ecx, BYTE PTR SCRAMBLE_11A_LUT[rax+r14]
	movzx	eax, cl
	xor	al, BYTE PTR $T2736103[rsp+2]
	mov	BYTE PTR [rdx-3], al
	mov	rax, rcx
	shr	rax, 1
	movzx	ecx, BYTE PTR SCRAMBLE_11A_LUT[rax+r14]
	movzx	eax, cl
	xor	al, BYTE PTR $T2736103[rsp+3]
	mov	BYTE PTR [rdx-2], al
	mov	rax, rcx
	shr	rax, 1
	movzx	ecx, BYTE PTR SCRAMBLE_11A_LUT[rax+r14]
	movzx	eax, cl
	and	al, 192					; 000000c0H
	mov	BYTE PTR [rdx-1], al
	cmp	rdx, r11
	je	SHORT $LN1963@Dot11aTxFr@2
$LL1964@Dot11aTxFr@2:
	movzx	eax, cl
	inc	rdx
	shr	rax, 1
	mov	cl, BYTE PTR SCRAMBLE_11A_LUT[rax+r14]
	mov	BYTE PTR [rdx-1], cl
	cmp	rdx, r11
	jne	SHORT $LL1964@Dot11aTxFr@2
$LN1963@Dot11aTxFr@2:

; 41   : 
; 42   :     ConvEncodeReset(info->bConvEncoderReg);

	xor	al, al
	mov	rsi, r15
	mov	BYTE PTR TxVector+24, al

; 43   :     pbInput = info->bFrameScrambled;
; 44   :     
; 45   :     for (i = 0; i < uiSymbolCountData; i++)

	test	ebp, ebp
	je	$LN3304@Dot11aTxFr@2
	lea	r12, OFFSET FLAT:?FFT128LUTMap@@3QBFB+256
	npad	8
$LL4@Dot11aTxFr@2:

; 46   :     {
; 47   :         pcOutput += GenerateSymbol(info, pcOutput, info->cWindow, 
; 48   :                 pbInput, (*PILOTSGN(uiPilotIndex)));

	lea	r8, OFFSET FLAT:TxVector+25
	mov	r9d, 3
	npad	3
$LL1978@Dot11aTxFr@2:
	movzx	edx, BYTE PTR [rdi]
	movzx	eax, al
	add	r8, 2
	shl	eax, 8
	inc	rdi
	movsxd	rcx, eax
	or	rcx, rdx
	movzx	eax, WORD PTR CONV_ENCODER_1_2_LUT[r14+rcx*2]
	mov	WORD PTR [r8-2], ax
	movzx	eax, dl
	shr	al, 2
	sub	r9, 1
	mov	BYTE PTR TxVector+24, al
	jne	SHORT $LL1978@Dot11aTxFr@2
	movzx	eax, BYTE PTR TxVector+25
	mov	edx, 256				; 00000100H
	lea	r11, OFFSET FLAT:TxVector+26
	lea	ecx, DWORD PTR [rax+rax*2]
	lea	eax, DWORD PTR [rcx+rcx]
	cdqe
	movzx	r8d, WORD PTR INTERLEAVE_6M_LUT[r14+rax*2]
	movzx	r9d, WORD PTR INTERLEAVE_6M_LUT[r14+rax*2+2]
	movzx	r10d, WORD PTR INTERLEAVE_6M_LUT[r14+rax*2+4]
	mov	WORD PTR TxVector+61, r8w
	mov	WORD PTR TxVector+63, r9w
	mov	WORD PTR TxVector+65, r10w
	npad	12
$LL1983@Dot11aTxFr@2:
	movzx	eax, BYTE PTR [r11]
	inc	r11
	add	eax, edx
	add	edx, 256				; 00000100H
	lea	eax, DWORD PTR [rax+rax*2]
	add	eax, eax
	or	r8w, WORD PTR INTERLEAVE_6M_LUT[r14+rax*2]
	or	r9w, WORD PTR INTERLEAVE_6M_LUT[r14+rax*2+2]
	or	r10w, WORD PTR INTERLEAVE_6M_LUT[r14+rax*2+4]
	mov	WORD PTR TxVector+61, r8w
	mov	WORD PTR TxVector+63, r9w
	mov	WORD PTR TxVector+65, r10w
	cmp	edx, 1536				; 00000600H
	jb	SHORT $LL1983@Dot11aTxFr@2
	lea	r10, OFFSET FLAT:TxVector+112
	lea	r8, OFFSET FLAT:TxVector+61
	mov	r9d, 6
	mov	rdx, r10
	npad	10
$LL1988@Dot11aTxFr@2:
	movzx	eax, BYTE PTR [r8]
	add	rdx, 32					; 00000020H
	inc	r8
	shl	eax, 3
	sub	r9, 1
	movsxd	rcx, eax
	mov	rax, QWORD PTR MAPA_BPSK_LUT[r14+rcx*4]
	mov	QWORD PTR [rdx-32], rax
	mov	rax, QWORD PTR MAPA_BPSK_LUT[r14+rcx*4+8]
	mov	QWORD PTR [rdx-24], rax
	mov	rax, QWORD PTR MAPA_BPSK_LUT[r14+rcx*4+16]
	mov	QWORD PTR [rdx-16], rax
	mov	rax, QWORD PTR MAPA_BPSK_LUT[r14+rcx*4+24]
	mov	QWORD PTR [rdx-8], rax
	jne	SHORT $LL1988@Dot11aTxFr@2
	mov	rcx, r10
	mov	edx, 38					; 00000026H
	lea	r8, OFFSET FLAT:TxVector+456
$LL2002@Dot11aTxFr@2:
	cmp	edx, 57					; 00000039H
	je	SHORT $LN2001@Dot11aTxFr@2
	cmp	edx, 43					; 0000002bH
	je	SHORT $LN2001@Dot11aTxFr@2
	mov	eax, DWORD PTR [rcx]
	add	rcx, 4
	mov	DWORD PTR [r8], eax
$LN2001@Dot11aTxFr@2:
	inc	edx
	add	r8, 4
	cmp	edx, 64					; 00000040H
	jb	SHORT $LL2002@Dot11aTxFr@2
	mov	edx, 1
	lea	r8, OFFSET FLAT:TxVector+308
$LL1997@Dot11aTxFr@2:
	cmp	edx, 7
	je	SHORT $LN1996@Dot11aTxFr@2
	cmp	edx, 21
	je	SHORT $LN1996@Dot11aTxFr@2
	mov	eax, DWORD PTR [rcx]
	add	rcx, 4
	mov	DWORD PTR [r8], eax
$LN1996@Dot11aTxFr@2:
	inc	edx
	add	r8, 4
	cmp	edx, 26
	jbe	SHORT $LL1997@Dot11aTxFr@2
	cmp	BYTE PTR PILOTSGN_LUT[rsi+r14], r15b
	jne	SHORT $LN1992@Dot11aTxFr@2
	mov	eax, 10720				; 000029e0H
	mov	ecx, -10720				; ffffffffffffd620H
	mov	WORD PTR TxVector+334, r15w
	mov	WORD PTR TxVector+390, r15w
	mov	WORD PTR TxVector+534, r15w
	mov	WORD PTR TxVector+478, r15w
	mov	WORD PTR TxVector+332, ax
	mov	WORD PTR TxVector+388, cx
	mov	WORD PTR TxVector+532, ax
	mov	WORD PTR TxVector+476, ax
	jmp	SHORT $LN2016@Dot11aTxFr@2
$LN1992@Dot11aTxFr@2:
	mov	ecx, -10720				; ffffffffffffd620H
	mov	eax, 10720				; 000029e0H
	mov	WORD PTR TxVector+334, r15w
	mov	WORD PTR TxVector+390, r15w
	mov	WORD PTR TxVector+534, r15w
	mov	WORD PTR TxVector+478, r15w
	mov	WORD PTR TxVector+332, cx
	mov	WORD PTR TxVector+388, ax
	mov	WORD PTR TxVector+532, cx
	mov	WORD PTR TxVector+476, cx
$LN2016@Dot11aTxFr@2:
	lea	rcx, QWORD PTR temp$2742945[rsp]
	xor	edx, edx
	mov	r8d, 512				; 00000200H
	call	memset
	lea	rcx, QWORD PTR temp$2742945[rsp]
	lea	rdx, OFFSET FLAT:TxVector+304
	mov	r8d, 128				; 00000080H
	call	memcpy
	lea	rcx, QWORD PTR temp$2742945[rsp+384]
	lea	rdx, OFFSET FLAT:TxVector+432
	mov	r8d, 128				; 00000080H
	call	memcpy
	lea	rcx, QWORD PTR temp$2742945[rsp]
	call	??$IFFTSSEEx@$0IA@@@YAXPEAUvcs@@@Z	; IFFTSSEEx<128>
	lea	r8, OFFSET FLAT:TxVector+688
	lea	rdx, OFFSET FLAT:?FFT128LUTMap@@3QBFB	; FFT128LUTMap
	mov	r11, r8
	npad	12
$LL2012@Dot11aTxFr@2:
	movsx	rax, WORD PTR [rdx]
	add	rdx, 2
	add	r11, 4
	cmp	rdx, r12
	mov	ecx, DWORD PTR temp$2742945[rsp+rax*4]
	mov	DWORD PTR [r11-4], ecx
	jl	SHORT $LL2012@Dot11aTxFr@2
	mov	rax, r8
	mov	ecx, 32					; 00000020H
$LL2009@Dot11aTxFr@2:
	movdqa	xmm0, XMMWORD PTR [rax]
	add	rax, 16
	sub	rcx, 1
	psllw	xmm0, 2
	movdqa	XMMWORD PTR [rax-16], xmm0
	jne	SHORT $LL2009@Dot11aTxFr@2
	lea	rcx, OFFSET FLAT:TxVector+560
	lea	rdx, OFFSET FLAT:TxVector+1072
	mov	r8d, 128				; 00000080H
	call	memcpy
	movzx	ecx, WORD PTR TxVector+568
	sar	WORD PTR TxVector+562, 2
	sar	WORD PTR TxVector+564, 1
	sar	WORD PTR TxVector+566, 1
	movzx	r11d, WORD PTR TxVector+1072
	movzx	eax, cx
	sar	r11w, 2
	sar	ax, 2
	mov	WORD PTR TxVector+560, r11w
	sub	cx, ax
	mov	WORD PTR TxVector+568, cx
	movzx	ecx, WORD PTR TxVector+570
	movzx	eax, cx
	sar	ax, 2
	sub	cx, ax
	movzx	eax, WORD PTR TxVector+6912
	mov	WORD PTR TxVector+570, cx
	movzx	ecx, WORD PTR TxVector+688
	movdqa	xmm0, XMMWORD PTR TxVector+560
	paddsw	xmm0, XMMWORD PTR TxVector+6912
	mov	WORD PTR TxVector+6924, r15w
	mov	WORD PTR TxVector+6926, r15w
	movdqa	XMMWORD PTR TxVector+560, xmm0
	add	WORD PTR TxVector+560, ax
	movzx	eax, WORD PTR TxVector+6914
	add	WORD PTR TxVector+562, ax
	movzx	eax, cx
	sar	ax, 2
	sub	cx, ax
	mov	WORD PTR TxVector+6912, cx
	movzx	ecx, WORD PTR TxVector+690
	movzx	eax, cx
	sar	ax, 2
	sub	cx, ax
	movzx	eax, WORD PTR TxVector+692
	sar	ax, 1
	mov	WORD PTR TxVector+6914, cx
	mov	WORD PTR TxVector+6916, ax
	movzx	eax, WORD PTR TxVector+694
	sar	ax, 1
	mov	WORD PTR TxVector+6918, ax
	movzx	eax, WORD PTR TxVector+696
	sar	ax, 2
	mov	WORD PTR TxVector+6920, ax
	movzx	eax, WORD PTR TxVector+698
	sar	ax, 2
	cmp	DWORD PTR TxVector, 44			; 0000002cH
	mov	WORD PTR TxVector+6922, ax
	jne	$LN2051@Dot11aTxFr@2
	movdqa	xmm7, XMMWORD PTR ?_ODD_MASK@@3QBU_COMPLEX16@@B
	movdqa	xmm8, XMMWORD PTR ?_EVEN_MASK@@3QBU_COMPLEX16@@B
	movdqa	xmm2, XMMWORD PTR TxVector+560
	xorps	xmm0, xmm0
	mov	edx, 5
	movdqa	xmm9, XMMWORD PTR ?g_coff1_row0@@3QAY07$$CBFA
	movdqa	xmm10, XMMWORD PTR ?g_coff1_row1@@3QAY07$$CBFA
	movdqa	xmm11, XMMWORD PTR ?g_coff1_row0@@3QAY07$$CBFA+16
	movdqa	xmm12, XMMWORD PTR ?g_coff1_row1@@3QAY07$$CBFA+16
	movdqa	xmm13, XMMWORD PTR ?g_coff1_row0@@3QAY07$$CBFA+32
	movdqa	xmm14, XMMWORD PTR ?g_coff1_row1@@3QAY07$$CBFA+32
	movdqa	xmm3, xmm2
	pmulhrsw xmm2, xmm10
	pmulhrsw xmm3, xmm9
	movdqa	xmm1, xmm3
	palignr	xmm1, xmm0, 12
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	paddw	xmm2, xmm0
	pand	xmm1, xmm7
	pand	xmm2, xmm8
	por	xmm1, xmm2
	movdqa	xmm2, XMMWORD PTR TxVector+576
	movdqu	XMMWORD PTR TxVector+1200, xmm1
	movdqa	xmm4, xmm2
	pmulhrsw xmm2, xmm12
	pmulhrsw xmm4, xmm11
	movdqa	xmm1, xmm4
	palignr	xmm1, xmm3, 12
	movdqa	xmm3, XMMWORD PTR TxVector+592
	pshufd	xmm0, xmm1, 177				; 000000b1H
	movdqa	xmm5, xmm3
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	pmulhrsw xmm5, xmm13
	paddw	xmm2, xmm0
	pand	xmm1, xmm7
	pand	xmm2, xmm8
	por	xmm1, xmm2
	movdqa	xmm2, xmm5
	palignr	xmm2, xmm4, 12
	movdqa	xmm4, XMMWORD PTR TxVector+608
	movdqu	XMMWORD PTR TxVector+1216, xmm1
	movdqa	xmm1, xmm3
	pshufd	xmm0, xmm2, 177				; 000000b1H
	pmulhrsw xmm1, xmm14
	paddw	xmm2, xmm0
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pand	xmm2, xmm7
	pand	xmm1, xmm8
	por	xmm2, xmm1
	movdqu	XMMWORD PTR TxVector+1232, xmm2
	movdqa	xmm2, xmm4
	palignr	xmm2, xmm3, 8
	movdqa	xmm3, XMMWORD PTR TxVector+624
	movdqa	xmm6, xmm2
	pmulhrsw xmm2, xmm10
	pmulhrsw xmm6, xmm9
	movdqa	xmm1, xmm6
	palignr	xmm1, xmm5, 12
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	paddw	xmm2, xmm0
	pand	xmm1, xmm7
	pand	xmm2, xmm8
	por	xmm1, xmm2
	movdqa	xmm2, xmm3
	palignr	xmm2, xmm4, 8
	movdqu	XMMWORD PTR TxVector+1244, xmm1
	movdqa	xmm4, xmm2
	pmulhrsw xmm2, xmm12
	pmulhrsw xmm4, xmm11
	movdqa	xmm1, xmm4
	palignr	xmm1, xmm6, 12
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	pand	xmm1, xmm7
	paddw	xmm2, xmm0
	lea	rcx, OFFSET FLAT:TxVector+1276
	lea	rax, OFFSET FLAT:TxVector+640
	pand	xmm2, xmm8
	lea	r8d, QWORD PTR [rdx+2]
	lea	r9, OFFSET FLAT:TxVector+560
	por	xmm1, xmm2
	movdqa	xmm2, XMMWORD PTR TxVector+640
	palignr	xmm2, xmm3, 8
	movdqu	XMMWORD PTR TxVector+1260, xmm1
	movdqa	xmm5, xmm2
	pmulhrsw xmm2, xmm14
	pmulhrsw xmm5, xmm13
	movdqa	xmm3, xmm5
	palignr	xmm3, xmm4, 12
	pshufd	xmm0, xmm3, 177				; 000000b1H
	paddw	xmm3, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	paddw	xmm2, xmm0
	pand	xmm3, xmm7
	pand	xmm2, xmm8
	por	xmm3, xmm2
	npad	8
$LL2056@Dot11aTxFr@2:
	movdqu	XMMWORD PTR [rcx], xmm3
	movdqa	xmm2, XMMWORD PTR [rax]
	lea	rax, QWORD PTR [rdx+1]
	add	rax, rax
	movdqa	xmm3, xmm2
	pmulhrsw xmm2, xmm10
	pmulhrsw xmm3, xmm9
	movdqa	xmm1, xmm3
	palignr	xmm1, xmm5, 12
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	paddw	xmm2, xmm0
	pand	xmm1, xmm7
	pand	xmm2, xmm8
	por	xmm1, xmm2
	movdqu	XMMWORD PTR [rcx+12], xmm1
	movdqa	xmm2, XMMWORD PTR [r9+rax*8]
	lea	rax, QWORD PTR [rdx+2]
	add	rax, rax
	movdqa	xmm4, xmm2
	pmulhrsw xmm2, xmm12
	pmulhrsw xmm4, xmm11
	movdqa	xmm1, xmm4
	palignr	xmm1, xmm3, 12
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	paddw	xmm2, xmm0
	pand	xmm1, xmm7
	pand	xmm2, xmm8
	por	xmm1, xmm2
	movdqu	XMMWORD PTR [rcx+28], xmm1
	movdqa	xmm3, XMMWORD PTR [r9+rax*8]
	lea	rax, QWORD PTR [rdx+3]
	add	rax, rax
	movdqa	xmm5, xmm3
	movdqa	xmm1, xmm3
	pmulhrsw xmm1, xmm14
	pmulhrsw xmm5, xmm13
	movdqa	xmm2, xmm5
	palignr	xmm2, xmm4, 12
	pshufd	xmm0, xmm2, 177				; 000000b1H
	paddw	xmm2, xmm0
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pand	xmm2, xmm7
	pand	xmm1, xmm8
	por	xmm2, xmm1
	movdqu	XMMWORD PTR [rcx+44], xmm2
	movdqa	xmm4, XMMWORD PTR [r9+rax*8]
	lea	rax, QWORD PTR [rdx+4]
	add	rax, rax
	add	rdx, 5
	movdqa	xmm2, xmm4
	palignr	xmm2, xmm3, 8
	movdqa	xmm6, xmm2
	pmulhrsw xmm2, xmm10
	pmulhrsw xmm6, xmm9
	movdqa	xmm1, xmm6
	palignr	xmm1, xmm5, 12
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	paddw	xmm2, xmm0
	pand	xmm1, xmm7
	pand	xmm2, xmm8
	por	xmm1, xmm2
	movdqu	XMMWORD PTR [rcx+56], xmm1
	movdqa	xmm3, XMMWORD PTR [r9+rax*8]
	movdqa	xmm2, xmm3
	palignr	xmm2, xmm4, 8
	movdqa	xmm4, xmm2
	pmulhrsw xmm2, xmm12
	pmulhrsw xmm4, xmm11
	movdqa	xmm1, xmm4
	palignr	xmm1, xmm6, 12
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pshufd	xmm0, xmm2, 177				; 000000b1H
	pand	xmm1, xmm7
	paddw	xmm2, xmm0
	mov	rax, rdx
	add	rcx, 88					; 00000058H
	add	rax, rax
	sub	r8, 1
	pand	xmm2, xmm8
	por	xmm1, xmm2
	lea	rax, QWORD PTR TxVector[r14+rax*8+560]
	movdqu	XMMWORD PTR [rcx-16], xmm1
	movdqa	xmm1, XMMWORD PTR [rax]
	palignr	xmm1, xmm3, 8
	movdqa	xmm5, xmm1
	pmulhrsw xmm1, xmm14
	pmulhrsw xmm5, xmm13
	movdqa	xmm3, xmm5
	palignr	xmm3, xmm4, 12
	pshufd	xmm0, xmm3, 177				; 000000b1H
	paddw	xmm3, xmm0
	pshufd	xmm0, xmm1, 177				; 000000b1H
	paddw	xmm1, xmm0
	pand	xmm3, xmm7
	pand	xmm1, xmm8
	por	xmm3, xmm1
	jne	$LL2056@Dot11aTxFr@2
	movdqa	XMMWORD PTR rr1$2743821[rsp], xmm3
	mov	eax, DWORD PTR rr1$2743821[rsp]
	mov	DWORD PTR [rcx], eax
	mov	eax, DWORD PTR rr1$2743821[rsp+4]
	mov	DWORD PTR [rcx+4], eax
	mov	eax, DWORD PTR rr1$2743821[rsp+8]
	mov	DWORD PTR [rcx+8], eax
	lea	rax, OFFSET FLAT:TxVector+1200
	lea	ecx, QWORD PTR [r8+22]
$LL2893@Dot11aTxFr@2:
	movdqa	xmm1, XMMWORD PTR [rax]
	movdqa	xmm0, XMMWORD PTR [rax+16]
	add	rbx, 16
	add	rax, 32					; 00000020H
	sub	rcx, 1
	psraw	xmm1, 6
	psraw	xmm0, 6
	packsswb xmm1, xmm0
	movntdq	XMMWORD PTR [rbx-16], xmm1
	jne	SHORT $LL2893@Dot11aTxFr@2
	mov	eax, 176				; 000000b0H
	jmp	SHORT $LN2045@Dot11aTxFr@2
$LN2051@Dot11aTxFr@2:
	cmp	DWORD PTR TxVector, 40			; 00000028H
	jne	SHORT $LN2046@Dot11aTxFr@2
	lea	rax, OFFSET FLAT:TxVector+560
	mov	ecx, 20
	npad	8
$LL2938@Dot11aTxFr@2:
	movdqa	xmm1, XMMWORD PTR [rax]
	movdqa	xmm0, XMMWORD PTR [rax+16]
	add	rbx, 16
	add	rax, 32					; 00000020H
	sub	rcx, 1
	psraw	xmm1, 6
	psraw	xmm0, 6
	packsswb xmm1, xmm0
	movntdq	XMMWORD PTR [rbx-16], xmm1
	jne	SHORT $LL2938@Dot11aTxFr@2
	mov	eax, 160				; 000000a0H
	jmp	SHORT $LN2045@Dot11aTxFr@2
$LN2046@Dot11aTxFr@2:
	mov	eax, r15d
$LN2045@Dot11aTxFr@2:
	mov	ecx, eax
	mov	rax, QWORD PTR pcOutput$[rsp]

; 49   :         uiPilotIndex++;

	inc	r13d
	lea	rbx, QWORD PTR [rax+rcx*2]
	inc	rsi
	mov	QWORD PTR pcOutput$[rsp], rbx

; 50   :         if (uiPilotIndex == 127)

	cmp	r13d, 127				; 0000007fH
	jne	SHORT $LN1@Dot11aTxFr@2

; 51   :             uiPilotIndex = 0;

	mov	r13d, r15d
	mov	rsi, r15
$LN1@Dot11aTxFr@2:

; 43   :     pbInput = info->bFrameScrambled;
; 44   :     
; 45   :     for (i = 0; i < uiSymbolCountData; i++)

	sub	rbp, 1
	je	SHORT $LN3304@Dot11aTxFr@2

; 41   : 
; 42   :     ConvEncodeReset(info->bConvEncoderReg);

	mov	al, BYTE PTR TxVector+24
	jmp	$LL4@Dot11aTxFr@2
$LN3304@Dot11aTxFr@2:

; 52   :         pbInput += (DBPS / BITS_PER_BYTE);
; 53   :     }
; 54   :     
; 55   :     UpsampleTailAndCopyNT(info, pcOutput);

	cmp	DWORD PTR TxVector, 44			; 0000002cH
	movaps	xmm14, XMMWORD PTR [rsp+608]
	movaps	xmm13, XMMWORD PTR [rsp+624]
	mov	r15, QWORD PTR [rsp+752]
	mov	r14, QWORD PTR [rsp+760]
	mov	r13, QWORD PTR [rsp+768]
	movaps	xmm12, XMMWORD PTR [rsp+640]
	movaps	xmm11, XMMWORD PTR [rsp+656]
	movaps	xmm10, XMMWORD PTR [rsp+672]
	mov	r12, QWORD PTR [rsp+776]
	mov	rdi, QWORD PTR [rsp+824]
	mov	rsi, QWORD PTR [rsp+816]
	movaps	xmm9, XMMWORD PTR [rsp+688]
	movaps	xmm8, XMMWORD PTR [rsp+704]
	movaps	xmm7, XMMWORD PTR [rsp+720]
	mov	rbp, QWORD PTR [rsp+800]
	movaps	xmm6, XMMWORD PTR [rsp+736]
	jne	SHORT $LN2984@Dot11aTxFr@2
	movdqa	xmm1, XMMWORD PTR TxVector+6912
	xorps	xmm3, xmm3

; 56   : 
; 57   :     return S_OK;

	xor	eax, eax
	movdqa	xmm2, xmm1
	movdqa	XMMWORD PTR TxVector+1216, xmm3
	pmulhrsw xmm1, XMMWORD PTR ?g_coff1_row1@@3QAY07$$CBFA
	pmulhrsw xmm2, XMMWORD PTR ?g_coff1_row0@@3QAY07$$CBFA
	palignr	xmm2, xmm3, 12
	psraw	xmm3, 6
	pshufd	xmm0, xmm2, 177				; 000000b1H
	paddw	xmm2, xmm0
	pshufd	xmm0, xmm1, 177				; 000000b1H
	pand	xmm2, XMMWORD PTR ?_ODD_MASK@@3QBU_COMPLEX16@@B
	paddw	xmm1, xmm0
	pand	xmm1, XMMWORD PTR ?_EVEN_MASK@@3QBU_COMPLEX16@@B
	por	xmm2, xmm1
	movdqa	XMMWORD PTR TxVector+1200, xmm2
	psraw	xmm2, 6
	packsswb xmm2, xmm3
	movntdq	XMMWORD PTR [rbx], xmm2

; 58   : }

	add	rsp, 784				; 00000310H
	pop	rbx
	ret	0

; 52   :         pbInput += (DBPS / BITS_PER_BYTE);
; 53   :     }
; 54   :     
; 55   :     UpsampleTailAndCopyNT(info, pcOutput);

$LN2984@Dot11aTxFr@2:
	cmp	DWORD PTR TxVector, 40			; 00000028H
	jne	SHORT $LN3288@Dot11aTxFr@2
	movdqa	xmm1, XMMWORD PTR TxVector+6912
	movdqa	xmm0, XMMWORD PTR TxVector+6928
	psraw	xmm1, 6
	psraw	xmm0, 6
	packsswb xmm1, xmm0
	movntdq	XMMWORD PTR [rbx], xmm1
$LN3288@Dot11aTxFr@2:

; 56   : 
; 57   :     return S_OK;

	xor	eax, eax

; 58   : }

	add	rsp, 784				; 00000310H
	pop	rbx
	ret	0
?Dot11aTxFrameEncode6@@YAJPEAU_BB11A_TX_VECTOR@@PEAU__PACKET_BASE@@@Z ENDP ; Dot11aTxFrameEncode6
END
